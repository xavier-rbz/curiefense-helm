---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app.kubernetes.io/name: confserver
    app.kubernetes.io/part-of: "curiefense"
  name: confserver
  namespace: {{ .Release.Namespace }}
spec:
  replicas: 1
  serviceName: confserver-hl
  selector:
    matchLabels:
      app.kubernetes.io/name: confserver
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: confserver
        app.kubernetes.io/part-of: "curiefense"
    spec:
      initContainers:
        - name: bootstrap-deploy
          {{ if regexMatch ".*/.*:" .Values.global.images.confserver }}
          {{/* The image name contains a version tag (e.g. for tests), do not append docker_tag */}}
          image: {{ .Values.global.images.confserver }}
          {{ else }}
          image: {{ .Values.global.images.confserver }}:{{ .Values.global.settings.docker_tag }}
          {{ end }}
          env:
            - name: "IF_NO_CONFIG_INIT_FROM"
              value: "/bootstrap/confdb-initial-data/"
          volumeMounts:
          - mountPath: /config
            name: persistent-confdb
          command: ["/usr/bin/dumb-init", "/bin/bash", "/bootstrap/bootstrap_config.sh"]
          imagePullPolicy: {{ .Values.global.imagePullPolicy }}
          resources:
            limits:
              memory: "500Mi"
              cpu: "1"
            requests:
              memory: "100Mi"
              cpu: {{ .Values.global.requests.cpu.confserver_init }}

      containers:
      - name: confserver-nginx
        env:
        - name: BOOTSTRAP_BUCKET_ON_STARTUP
          value: "yes"
        - name: CURIE_BUCKET_LINK
          value: {{ .Values.global.settings.curieconf_manifest_url }}
{{- if eq .Values.global.settings.curiefense_bucket_type "minio" }}
        - name: CURIE_MINIO_HOST
          value: {{ .Values.global.settings.curiefense_minio_host }}
{{- if .Values.global.settings.curiefense_minio_insecure }}
        - name: CURIE_MINIO_SECURE
          value: "FALSE"
{{- end }}
{{- end }}
        image: curiefense/confserver:tls-confserver
        command: ["/usr/bin/dumb-init", "/bin/bash", "/init/start_nginx.sh"]
        ports:
        - containerPort: 80
          name: confserver-http
        livenessProbe:
          httpGet:
            path: /api/v1/
            port: confserver-http
        volumeMounts:
        - mountPath: /uwsgi
          name: uwsgi-socket
        - mountPath: /run/secrets/confsslcrt
          name: confsslcrt
        - mountPath: /run/secrets/confsslkey
          name: confsslkey
        imagePullPolicy: {{ .Values.global.imagePullPolicy }}
        resources:
          limits:
            memory: "500Mi"
            cpu: "500m"
          requests:
            memory: "10Mi"
            cpu: {{ .Values.global.requests.cpu.confserver_nginx }}
      - name: confserver-uwsgi
        env:
        - name: CURIE_BUCKET_LINK
          value: {{ .Values.global.settings.curieconf_manifest_url }}
{{- if eq .Values.global.settings.curiefense_bucket_type "minio" }}
        - name: CURIE_MINIO_HOST
          value: {{ .Values.global.settings.curiefense_minio_host }}
{{- if .Values.global.settings.curiefense_minio_insecure }}
        - name: CURIE_MINIO_SECURE
          value: "FALSE"
{{- end }}
{{- end }}
        {{ if regexMatch ".*/.*:" .Values.global.images.confserver }}
        {{/* The image name contains a version tag (e.g. for tests), do not append docker_tag */}}
        image: {{ .Values.global.images.confserver }}
        {{ else }}
        image: {{ .Values.global.images.confserver }}:{{ .Values.global.settings.docker_tag }}
        {{ end }}
        volumeMounts:
        - mountPath: /uwsgi
          name: uwsgi-socket
{{- if eq .Values.global.settings.curiefense_bucket_type "s3" }}
        - mountPath: /run/secrets/s3cfg
          name: s3cfg
{{- end }}
{{- if eq .Values.global.settings.curiefense_bucket_type "gs" }}
        - mountPath: /run/secrets/gs
          name: gs
{{- end }}
{{- if eq .Values.global.settings.curiefense_bucket_type "local-bucket" }}
        - mountPath: /bucket
          name: local-bucket
{{- end }}
{{- if eq .Values.global.settings.curiefense_bucket_type "minio" }}
        - mountPath: /run/secrets/miniocfg
          name: miniocfg
{{- end }}
        - mountPath: /config
          name: persistent-confdb
        imagePullPolicy: {{ .Values.global.imagePullPolicy }}
        resources:
          limits:
            memory: "500Mi"
            cpu: "500m"
          requests:
            memory: "100Mi"
            cpu: {{ .Values.global.requests.cpu.confserver_uwsgi }}
        command: ["/usr/bin/dumb-init", "/bin/bash", "/init/start_uwsgi.sh"]
      restartPolicy: Always
      serviceAccountName: ""
      imagePullSecrets:
        {{- .Values.global.imagePullSecrets | toYaml | nindent 8  }}
      volumes:
      - name: confsslcrt
        secret:
          items:
          - key: confsslcrt
            path: confsslcrt
          secretName: confsslcrt
      - name: confsslkey
        secret:
          items:
          - key: confsslkey
            path: confsslkey
          secretName: confsslkey
{{- if eq .Values.global.settings.curiefense_bucket_type "s3" }}
      - name: s3cfg
        secret:
          items:
          - key: s3cfg
            path: s3cfg
          secretName: s3cfg
{{- end }}
{{- if eq .Values.global.settings.curiefense_bucket_type "gs" }}
      - name: gs
        secret:
          items:
          - key: gs.json
            path: gs.json
          secretName: gs
{{- end }}
{{- if eq .Values.global.settings.curiefense_bucket_type "local-bucket" }}
      - name: local-bucket
        hostPath:
          path: /bucket
          type: DirectoryOrCreate
{{- end }}
{{- if eq .Values.global.settings.curiefense_bucket_type "minio" }}
      - name: miniocfg
        secret:
          items:
          - key: miniocfg
            path: miniocfg
          secretName: miniocfg
{{- end }}
      - name: uwsgi-socket
        emptyDir: {}
{{- if .Values.global.tolerations }}
      tolerations:
{{ toYaml .Values.global.tolerations | indent 8 }}
{{- end }}
  volumeClaimTemplates:
  - metadata:
      name: persistent-confdb
    spec:
      storageClassName: {{ .Values.global.storage.storage_class_name }}
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: {{ .Values.global.storage.confserver_storage_size }}
