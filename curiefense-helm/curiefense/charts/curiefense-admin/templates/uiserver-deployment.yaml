apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: uiserver
    app.kubernetes.io/part-of: "curiefense"
  name: uiserver
  namespace: {{ .Release.Namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: uiserver
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: uiserver
        app.kubernetes.io/part-of: "curiefense"
    spec:
      containers:
      - name: uiserver
        image: curiefense/uiserver:tls-confserver
        ports:
        - containerPort: 80
          name: uiserver-http
        volumeMounts:
        - mountPath: /run/secrets/confsslcrt
          name: confsslcrt
        - mountPath: /run/secrets/uisslcrt
          name: uisslcrt
        - mountPath: /run/secrets/uisslkey
          name: uisslkey
        livenessProbe:
          httpGet:
            path: /
            port: uiserver-http
        imagePullPolicy: {{ .Values.global.imagePullPolicy }}
        resources:
          limits:
            memory: "500Mi"
            cpu: "900m"
          requests:
            memory: "10Mi"
            cpu: {{ .Values.global.requests.cpu.uiserver }}
      restartPolicy: Always
      imagePullSecrets:
        {{- .Values.global.imagePullSecrets | toYaml | nindent 8  }}
      serviceAccountName: ""
      volumes:
      - name: confsslcrt
        secret:
          items:
          - key: confsslcrt
            path: confsslcrt
          secretName: confsslcrt
      - name: uisslcrt
        secret:
          items:
          - key: uisslcrt
            path: uisslcrt
          secretName: uisslcrt
      - name: uisslkey
        secret:
          items:
          - key: uisslkey
            path: uisslkey
          secretName: uisslkey
{{- if .Values.global.tolerations }}
      tolerations:
{{ toYaml .Values.global.tolerations | indent 8 }}
{{- end }}
